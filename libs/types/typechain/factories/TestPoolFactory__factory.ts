/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestPoolFactory,
  TestPoolFactoryInterface,
} from "../TestPoolFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "DeployPool",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_poolCode",
        type: "string",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "poolBase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516105a63803806105a6833981810160405281019061003291906100be565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561006c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610139565b6000815190506100b881610122565b92915050565b6000602082840312156100d4576100d361011d565b5b60006100e2848285016100a9565b91505092915050565b60006100f6826100fd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61012b816100eb565b811461013657600080fd5b50565b60805160601c61044a61015c600039600081816077015260a0015261044a6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635bae377a1461003b578063d0d1303614610059575b600080fd5b610043610075565b6040516100509190610310565b60405180910390f35b610073600480360381019061006e9190610264565b610099565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b60006100ed7f000000000000000000000000000000000000000000000000000000000000000084846040516020016100d292919061032b565b60405160208183030381529060405280519060200120610137565b90508073ffffffffffffffffffffffffffffffffffffffff167f216c3165d111d8414747bc1012ba17835a6523f16a32966ac4682527525f39fc60405160405180910390a2505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f5915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610208576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ff9061034f565b60405180910390fd5b92915050565b60008083601f840112610224576102236103c6565b5b8235905067ffffffffffffffff811115610241576102406103c1565b5b60208301915083600182028301111561025d5761025c6103cb565b5b9250929050565b6000806020838503121561027b5761027a6103d5565b5b600083013567ffffffffffffffff811115610299576102986103d0565b5b6102a58582860161020e565b92509250509250929050565b6102ba81610380565b82525050565b60006102cc838561036f565b93506102d98385846103b2565b6102e2836103da565b840190509392505050565b60006102fa60178361036f565b9150610305826103eb565b602082019050919050565b600060208201905061032560008301846102b1565b92915050565b600060208201905081810360008301526103468184866102c0565b90509392505050565b60006020820190508181036000830152610368816102ed565b9050919050565b600082825260208201905092915050565b600061038b82610392565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f455243313136373a2063726561746532206661696c656400000000000000000060008201525056fea264697066735822122010bd1a6ff4b97ecb9292fa798c1a7e42e0ea1fe0c0371f89a2a1985ebb9e954e64736f6c63430008060033";

export class TestPoolFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestPoolFactory> {
    return super.deploy(_pool, overrides || {}) as Promise<TestPoolFactory>;
  }
  getDeployTransaction(
    _pool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_pool, overrides || {});
  }
  attach(address: string): TestPoolFactory {
    return super.attach(address) as TestPoolFactory;
  }
  connect(signer: Signer): TestPoolFactory__factory {
    return super.connect(signer) as TestPoolFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPoolFactoryInterface {
    return new utils.Interface(_abi) as TestPoolFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPoolFactory {
    return new Contract(address, _abi, signerOrProvider) as TestPoolFactory;
  }
}
