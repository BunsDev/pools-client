/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestOracleWrapper,
  TestOracleWrapperInterface,
} from "../TestOracleWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_PRICE",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_INCREMENT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d5938038062000d598339818101604052810190620000379190620002c9565b620000576200004b6200007760201b60201c565b6200007f60201b60201c565b62000068816200014360201b60201c565b60016002819055505062000443565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b620001536200007760201b60201c565b73ffffffffffffffffffffffffffffffffffffffff16620001796200028960201b60201c565b73ffffffffffffffffffffffffffffffffffffffff1614620001d2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001c99062000349565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000245576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200023c906200036b565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081519050620002c38162000429565b92915050565b600060208284031215620002e257620002e1620003d2565b5b6000620002f284828501620002b2565b91505092915050565b60006200030a6020836200038d565b91506200031782620003d7565b602082019050919050565b600062000331601a836200038d565b91506200033e8262000400565b602082019050919050565b600060208201905081810360008301526200036481620002fb565b9050919050565b60006020820190508181036000830152620003868162000322565b9050919050565b600082825260208201905092915050565b6000620003ab82620003b2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f7261636c652063616e6e6f7420626520302061646472657373000000000000600082015250565b62000434816200039e565b81146200044057600080fd5b50565b61090680620004536000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012357806398d5fdca14610141578063a035b1fe1461015f578063b5bf6eb61461017d578063f2fde38b146101875761009e565b80636d25d802146100a3578063715018a6146100c15780637adbf973146100cb5780637c5e2795146100e75780637dc0d1d014610105575b600080fd5b6100ab6101a3565b6040516100b89190610688565b60405180910390f35b6100c96101a8565b005b6100e560048036038101906100e091906105b9565b610230565b005b6100ef610360565b6040516100fc9190610688565b60405180910390f35b61010d610365565b60405161011a919061066d565b60405180910390f35b61012b61038b565b604051610138919061066d565b60405180910390f35b6101496103b4565b6040516101569190610688565b60405180910390f35b6101676103be565b6040516101749190610688565b60405180910390f35b6101856103c4565b005b6101a1600480360381019061019c91906105b9565b6103e0565b005b600181565b6101b06104d8565b73ffffffffffffffffffffffffffffffffffffffff166101ce61038b565b73ffffffffffffffffffffffffffffffffffffffff1614610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b906106c3565b60405180910390fd5b61022e60006104e0565b565b6102386104d8565b73ffffffffffffffffffffffffffffffffffffffff1661025661038b565b73ffffffffffffffffffffffffffffffffffffffff16146102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906106c3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610313906106e3565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600181565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600254905090565b60025481565b6001600260008282546103d79190610714565b92505081905550565b6103e86104d8565b73ffffffffffffffffffffffffffffffffffffffff1661040661038b565b73ffffffffffffffffffffffffffffffffffffffff161461045c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610453906106c3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156104cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c3906106a3565b60405180910390fd5b6104d5816104e0565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000813590506105b3816108b9565b92915050565b6000602082840312156105cf576105ce610813565b5b60006105dd848285016105a4565b91505092915050565b6105ef816107a8565b82525050565b6105fe816107ba565b82525050565b6000610611602683610703565b915061061c82610818565b604082019050919050565b6000610634602083610703565b915061063f82610867565b602082019050919050565b6000610657601a83610703565b915061066282610890565b602082019050919050565b600060208201905061068260008301846105e6565b92915050565b600060208201905061069d60008301846105f5565b92915050565b600060208201905081810360008301526106bc81610604565b9050919050565b600060208201905081810360008301526106dc81610627565b9050919050565b600060208201905081810360008301526106fc8161064a565b9050919050565b600082825260208201905092915050565b600061071f826107ba565b915061072a836107ba565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615610765576107646107e4565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561079d5761079c6107e4565b5b828201905092915050565b60006107b3826107c4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4f7261636c652063616e6e6f7420626520302061646472657373000000000000600082015250565b6108c2816107a8565b81146108cd57600080fd5b5056fea2646970667358221220f91e0b4cec6bf1e371d09c2142aa56fb48e27718f55ee36f3452cf5c85e5f5ea64736f6c63430008060033";

export class TestOracleWrapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _oracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestOracleWrapper> {
    return super.deploy(_oracle, overrides || {}) as Promise<TestOracleWrapper>;
  }
  getDeployTransaction(
    _oracle: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_oracle, overrides || {});
  }
  attach(address: string): TestOracleWrapper {
    return super.attach(address) as TestOracleWrapper;
  }
  connect(signer: Signer): TestOracleWrapper__factory {
    return super.connect(signer) as TestOracleWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOracleWrapperInterface {
    return new utils.Interface(_abi) as TestOracleWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestOracleWrapper {
    return new Contract(address, _abi, signerOrProvider) as TestOracleWrapper;
  }
}
