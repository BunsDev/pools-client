/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoolToken, PoolTokenInterface } from "../PoolToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600a81526020017f424153455f544f4b454e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4241534500000000000000000000000000000000000000000000000000000000815250816004908051906020019062000096929190620000d4565b508060059080519060200190620000af929190620000d4565b506008600660006101000a81548160ff021916908360ff1602179055505050620001e9565b828054620000e29062000184565b90600052602060002090601f01602090048101928262000106576000855562000152565b82601f106200012157805160ff191683800117855562000152565b8280016001018555821562000152579182015b828111156200015157825182559160200191906001019062000134565b5b50905062000161919062000165565b5090565b5b808211156200018057600081600090555060010162000166565b5090565b600060028204905060018216806200019d57607f821691505b60208210811415620001b457620001b3620001ba565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b611f2180620001f96000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80639065714711610097578063a9059cbb11610066578063a9059cbb146102d7578063dd62ed3e14610307578063f2fde38b14610337578063fcd3533c1461035357610100565b8063906571471461023d57806394bf804d1461025957806395d89b4114610289578063a457c2d7146102a757610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806370a08231146101ef5780638da5cb5b1461021f57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d610383565b60405161011a9190611848565b60405180910390f35b61013d600480360381019061013891906115e2565b610415565b60405161014a919061182d565b60405180910390f35b61015b610433565b604051610168919061198a565b60405180910390f35b61018b60048036038101906101869190611504565b61043d565b604051610198919061182d565b60405180910390f35b6101a96104f5565b6040516101b691906119a5565b60405180910390f35b6101d960048036038101906101d491906115e2565b61050c565b6040516101e6919061182d565b60405180910390f35b61020960048036038101906102049190611497565b6105b8565b604051610216919061198a565b60405180910390f35b610227610601565b6040516102349190611812565b60405180910390f35b61025760048036038101906102529190611557565b610627565b005b610273600480360381019061026e9190611622565b61078e565b604051610280919061182d565b60405180910390f35b610291610834565b60405161029e9190611848565b60405180910390f35b6102c160048036038101906102bc91906115e2565b6108c6565b6040516102ce919061182d565b60405180910390f35b6102f160048036038101906102ec91906115e2565b610972565b6040516102fe919061182d565b60405180910390f35b610321600480360381019061031c91906114c4565b610990565b60405161032e919061198a565b60405180910390f35b610351600480360381019061034c9190611497565b610a17565b005b61036d60048036038101906103689190611622565b610b5b565b60405161037a919061182d565b60405180910390f35b60606004805461039290611b53565b80601f01602080910402602001604051908101604052809291908181526020018280546103be90611b53565b801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b5050505050905090565b6000610429610422610c01565b8484610c09565b6001905092915050565b6000600354905090565b600061044a848484610dd4565b6104ea84610456610c01565b84600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006104a0610c01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104e59190611a88565b610c09565b600190509392505050565b6000600660009054906101000a900460ff16905090565b60006105ae610519610c01565b848460026000610527610c01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105a99190611a32565b610c09565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff168061064d575060008054906101000a900460ff16155b61068c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610683906118ca565b60405180910390fd5b60008060019054906101000a900460ff1615905080156106dc576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b83600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826004908051906020019061073392919061135a565b50816005908051906020019061074a92919061135a565b506012600660006101000a81548160ff021916908360ff16021790555080156107885760008060016101000a81548160ff0219169083151502179055505b50505050565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610820576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610817906118ea565b60405180910390fd5b61082a8284611045565b6001905092915050565b60606005805461084390611b53565b80601f016020809104026020016040519081016040528092919081815260200182805461086f90611b53565b80156108bc5780601f10610891576101008083540402835291602001916108bc565b820191906000526020600020905b81548152906001019060200180831161089f57829003601f168201915b5050505050905090565b60006109686108d3610c01565b8484600260006108e1610c01565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109639190611a88565b610c09565b6001905092915050565b600061098661097f610c01565b8484610dd4565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9e906118ea565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b17576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0e9061188a565b60405180910390fd5b80600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be4906118ea565b60405180910390fd5b610bf782846111cd565b6001905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c709061194a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ce9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce0906118aa565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610dc7919061198a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3b9061192a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610eb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eab9061186a565b60405180910390fd5b610ebf838383611355565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f0a9190611a88565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f989190611a32565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611038919061198a565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ac9061196a565b60405180910390fd5b6110c160008383611355565b806003546110cf9190611a32565b60038190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546111209190611a32565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111c1919061198a565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561123d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112349061190a565b60405180910390fd5b61124982600083611355565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112949190611a88565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550806003546112e59190611a88565b600381905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611349919061198a565b60405180910390a35050565b505050565b82805461136690611b53565b90600052602060002090601f01602090048101928261138857600085556113cf565b82601f106113a157805160ff19168380011785556113cf565b828001600101855582156113cf579182015b828111156113ce5782518255916020019190600101906113b3565b5b5090506113dc91906113e0565b5090565b5b808211156113f95760008160009055506001016113e1565b5090565b600061141061140b846119e5565b6119c0565b90508281526020810184848401111561142c5761142b611c48565b5b611437848285611b11565b509392505050565b60008135905061144e81611ebd565b92915050565b600082601f83011261146957611468611c43565b5b81356114798482602086016113fd565b91505092915050565b60008135905061149181611ed4565b92915050565b6000602082840312156114ad576114ac611c52565b5b60006114bb8482850161143f565b91505092915050565b600080604083850312156114db576114da611c52565b5b60006114e98582860161143f565b92505060206114fa8582860161143f565b9150509250929050565b60008060006060848603121561151d5761151c611c52565b5b600061152b8682870161143f565b935050602061153c8682870161143f565b925050604061154d86828701611482565b9150509250925092565b6000806000606084860312156115705761156f611c52565b5b600061157e8682870161143f565b935050602084013567ffffffffffffffff81111561159f5761159e611c4d565b5b6115ab86828701611454565b925050604084013567ffffffffffffffff8111156115cc576115cb611c4d565b5b6115d886828701611454565b9150509250925092565b600080604083850312156115f9576115f8611c52565b5b60006116078582860161143f565b925050602061161885828601611482565b9150509250929050565b6000806040838503121561163957611638611c52565b5b600061164785828601611482565b92505060206116588582860161143f565b9150509250929050565b61166b81611abc565b82525050565b61167a81611ace565b82525050565b600061168b82611a16565b6116958185611a21565b93506116a5818560208601611b20565b6116ae81611c57565b840191505092915050565b60006116c6602383611a21565b91506116d182611c68565b604082019050919050565b60006116e9601b83611a21565b91506116f482611cb7565b602082019050919050565b600061170c602283611a21565b915061171782611ce0565b604082019050919050565b600061172f602e83611a21565b915061173a82611d2f565b604082019050919050565b6000611752601483611a21565b915061175d82611d7e565b602082019050919050565b6000611775602183611a21565b915061178082611da7565b604082019050919050565b6000611798602583611a21565b91506117a382611df6565b604082019050919050565b60006117bb602483611a21565b91506117c682611e45565b604082019050919050565b60006117de601f83611a21565b91506117e982611e94565b602082019050919050565b6117fd81611afa565b82525050565b61180c81611b04565b82525050565b60006020820190506118276000830184611662565b92915050565b60006020820190506118426000830184611671565b92915050565b600060208201905081810360008301526118628184611680565b905092915050565b60006020820190508181036000830152611883816116b9565b9050919050565b600060208201905081810360008301526118a3816116dc565b9050919050565b600060208201905081810360008301526118c3816116ff565b9050919050565b600060208201905081810360008301526118e381611722565b9050919050565b6000602082019050818103600083015261190381611745565b9050919050565b6000602082019050818103600083015261192381611768565b9050919050565b600060208201905081810360008301526119438161178b565b9050919050565b60006020820190508181036000830152611963816117ae565b9050919050565b60006020820190508181036000830152611983816117d1565b9050919050565b600060208201905061199f60008301846117f4565b92915050565b60006020820190506119ba6000830184611803565b92915050565b60006119ca6119db565b90506119d68282611b85565b919050565b6000604051905090565b600067ffffffffffffffff821115611a00576119ff611c14565b5b611a0982611c57565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000611a3d82611afa565b9150611a4883611afa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a7d57611a7c611bb6565b5b828201905092915050565b6000611a9382611afa565b9150611a9e83611afa565b925082821015611ab157611ab0611bb6565b5b828203905092915050565b6000611ac782611ada565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b83811015611b3e578082015181840152602081019050611b23565b83811115611b4d576000848401525b50505050565b60006002820490506001821680611b6b57607f821691505b60208210811415611b7f57611b7e611be5565b5b50919050565b611b8e82611c57565b810181811067ffffffffffffffff82111715611bad57611bac611c14565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e65723a2073657474696e6720746f203020616464726573730000000000600082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f6d73672e73656e646572206e6f74206f776e6572000000000000000000000000600082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b611ec681611abc565b8114611ed157600080fd5b50565b611edd81611afa565b8114611ee857600080fd5b5056fea26469706673582212201f747be7b5ada2f68067d198f26381441d9db8bfbd9375a400169d068ef1e73564736f6c63430008060033";

export class PoolToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolToken> {
    return super.deploy(overrides || {}) as Promise<PoolToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolToken {
    return super.attach(address) as PoolToken;
  }
  connect(signer: Signer): PoolToken__factory {
    return super.connect(signer) as PoolToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolTokenInterface {
    return new utils.Interface(_abi) as PoolTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolToken {
    return new Contract(address, _abi, signerOrProvider) as PoolToken;
  }
}
