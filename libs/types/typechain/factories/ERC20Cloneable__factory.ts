/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Cloneable,
  ERC20CloneableInterface,
} from "../ERC20Cloneable";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ce538038062001ce58339818101604052810190620000379190620001bb565b81600490805190602001906200004f9291906200008d565b508060059080519060200190620000689291906200008d565b506012600660006101000a81548160ff021916908360ff1602179055505050620003c4565b8280546200009b90620002d5565b90600052602060002090601f016020900481019282620000bf57600085556200010b565b82601f10620000da57805160ff19168380011785556200010b565b828001600101855582156200010b579182015b828111156200010a578251825591602001919060010190620000ed565b5b5090506200011a91906200011e565b5090565b5b80821115620001395760008160009055506001016200011f565b5090565b6000620001546200014e8462000269565b62000240565b905082815260208101848484011115620001735762000172620003a4565b5b620001808482856200029f565b509392505050565b600082601f830112620001a0576200019f6200039f565b5b8151620001b28482602086016200013d565b91505092915050565b60008060408385031215620001d557620001d4620003ae565b5b600083015167ffffffffffffffff811115620001f657620001f5620003a9565b5b620002048582860162000188565b925050602083015167ffffffffffffffff811115620002285762000227620003a9565b5b620002368582860162000188565b9150509250929050565b60006200024c6200025f565b90506200025a82826200030b565b919050565b6000604051905090565b600067ffffffffffffffff82111562000287576200028662000370565b5b6200029282620003b3565b9050602081019050919050565b60005b83811015620002bf578082015181840152602081019050620002a2565b83811115620002cf576000848401525b50505050565b60006002820490506001821680620002ee57607f821691505b6020821081141562000305576200030462000341565b5b50919050565b6200031682620003b3565b810181811067ffffffffffffffff8211171562000338576200033762000370565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61191180620003d46000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063a457c2d711610066578063a457c2d714610261578063a9059cbb14610291578063dd62ed3e146102c1578063f2fde38b146102f1576100ea565b80638da5cb5b14610209578063906571471461022757806395d89b4114610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806370a08231146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030d565b60405161010491906112f0565b60405180910390f35b61012760048036038101906101229190611110565b61039f565b60405161013491906112d5565b60405180910390f35b6101456103bd565b60405161015291906113f2565b60405180910390f35b61017560048036038101906101709190611032565b6103c7565b60405161018291906112d5565b60405180910390f35b61019361047f565b6040516101a0919061140d565b60405180910390f35b6101c360048036038101906101be9190611110565b610496565b6040516101d091906112d5565b60405180910390f35b6101f360048036038101906101ee9190610fc5565b610542565b60405161020091906113f2565b60405180910390f35b61021161058b565b60405161021e91906112ba565b60405180910390f35b610241600480360381019061023c9190611085565b6105b1565b005b61024b610718565b60405161025891906112f0565b60405180910390f35b61027b60048036038101906102769190611110565b6107aa565b60405161028891906112d5565b60405180910390f35b6102ab60048036038101906102a69190611110565b610856565b6040516102b891906112d5565b60405180910390f35b6102db60048036038101906102d69190610ff2565b610874565b6040516102e891906113f2565b60405180910390f35b61030b60048036038101906103069190610fc5565b6108fb565b005b60606004805461031c906115bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610348906115bb565b80156103955780601f1061036a57610100808354040283529160200191610395565b820191906000526020600020905b81548152906001019060200180831161037857829003601f168201915b5050505050905090565b60006103b36103ac610a3f565b8484610a47565b6001905092915050565b6000600354905090565b60006103d4848484610c12565b610474846103e0610a3f565b84600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061042a610a3f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461046f91906114f0565b610a47565b600190509392505050565b6000600660009054906101000a900460ff16905090565b60006105386104a3610a3f565b8484600260006104b1610a3f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610533919061149a565b610a47565b6001905092915050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff16806105d7575060008054906101000a900460ff16155b610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90611372565b60405180910390fd5b60008060019054906101000a900460ff161590508015610666576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b83600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600490805190602001906106bd929190610e88565b5081600590805190602001906106d4929190610e88565b506012600660006101000a81548160ff021916908360ff16021790555080156107125760008060016101000a81548160ff0219169083151502179055505b50505050565b606060058054610727906115bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610753906115bb565b80156107a05780601f10610775576101008083540402835291602001916107a0565b820191906000526020600020905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b600061084c6107b7610a3f565b8484600260006107c5610a3f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461084791906114f0565b610a47565b6001905092915050565b600061086a610863610a3f565b8484610c12565b6001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600660019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098290611392565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290611332565b60405180910390fd5b80600660016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aae906113d2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e90611352565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c0591906113f2565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c79906113b2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce990611312565b60405180910390fd5b610cfd838383610e83565b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610d4891906114f0565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610dd6919061149a565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e7691906113f2565b60405180910390a3505050565b505050565b828054610e94906115bb565b90600052602060002090601f016020900481019282610eb65760008555610efd565b82601f10610ecf57805160ff1916838001178555610efd565b82800160010185558215610efd579182015b82811115610efc578251825591602001919060010190610ee1565b5b509050610f0a9190610f0e565b5090565b5b80821115610f27576000816000905550600101610f0f565b5090565b6000610f3e610f398461144d565b611428565b905082815260208101848484011115610f5a57610f596116b0565b5b610f65848285611579565b509392505050565b600081359050610f7c816118ad565b92915050565b600082601f830112610f9757610f966116ab565b5b8135610fa7848260208601610f2b565b91505092915050565b600081359050610fbf816118c4565b92915050565b600060208284031215610fdb57610fda6116ba565b5b6000610fe984828501610f6d565b91505092915050565b60008060408385031215611009576110086116ba565b5b600061101785828601610f6d565b925050602061102885828601610f6d565b9150509250929050565b60008060006060848603121561104b5761104a6116ba565b5b600061105986828701610f6d565b935050602061106a86828701610f6d565b925050604061107b86828701610fb0565b9150509250925092565b60008060006060848603121561109e5761109d6116ba565b5b60006110ac86828701610f6d565b935050602084013567ffffffffffffffff8111156110cd576110cc6116b5565b5b6110d986828701610f82565b925050604084013567ffffffffffffffff8111156110fa576110f96116b5565b5b61110686828701610f82565b9150509250925092565b60008060408385031215611127576111266116ba565b5b600061113585828601610f6d565b925050602061114685828601610fb0565b9150509250929050565b61115981611524565b82525050565b61116881611536565b82525050565b60006111798261147e565b6111838185611489565b9350611193818560208601611588565b61119c816116bf565b840191505092915050565b60006111b4602383611489565b91506111bf826116d0565b604082019050919050565b60006111d7601b83611489565b91506111e28261171f565b602082019050919050565b60006111fa602283611489565b915061120582611748565b604082019050919050565b600061121d602e83611489565b915061122882611797565b604082019050919050565b6000611240601483611489565b915061124b826117e6565b602082019050919050565b6000611263602583611489565b915061126e8261180f565b604082019050919050565b6000611286602483611489565b91506112918261185e565b604082019050919050565b6112a581611562565b82525050565b6112b48161156c565b82525050565b60006020820190506112cf6000830184611150565b92915050565b60006020820190506112ea600083018461115f565b92915050565b6000602082019050818103600083015261130a818461116e565b905092915050565b6000602082019050818103600083015261132b816111a7565b9050919050565b6000602082019050818103600083015261134b816111ca565b9050919050565b6000602082019050818103600083015261136b816111ed565b9050919050565b6000602082019050818103600083015261138b81611210565b9050919050565b600060208201905081810360008301526113ab81611233565b9050919050565b600060208201905081810360008301526113cb81611256565b9050919050565b600060208201905081810360008301526113eb81611279565b9050919050565b6000602082019050611407600083018461129c565b92915050565b600060208201905061142260008301846112ab565b92915050565b6000611432611443565b905061143e82826115ed565b919050565b6000604051905090565b600067ffffffffffffffff8211156114685761146761167c565b5b611471826116bf565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006114a582611562565b91506114b083611562565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114e5576114e461161e565b5b828201905092915050565b60006114fb82611562565b915061150683611562565b9250828210156115195761151861161e565b5b828203905092915050565b600061152f82611542565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b838110156115a657808201518184015260208101905061158b565b838111156115b5576000848401525b50505050565b600060028204905060018216806115d357607f821691505b602082108114156115e7576115e661164d565b5b50919050565b6115f6826116bf565b810181811067ffffffffffffffff821117156116155761161461167c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e65723a2073657474696e6720746f203020616464726573730000000000600082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f6d73672e73656e646572206e6f74206f776e6572000000000000000000000000600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6118b681611524565b81146118c157600080fd5b50565b6118cd81611562565b81146118d857600080fd5b5056fea264697066735822122012575d07651675f35ccc99eb346e197fa25405e16be12b5d1ddcb3ddc6829f3264736f6c63430008060033";

export class ERC20Cloneable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Cloneable> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC20Cloneable>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC20Cloneable {
    return super.attach(address) as ERC20Cloneable;
  }
  connect(signer: Signer): ERC20Cloneable__factory {
    return super.connect(signer) as ERC20Cloneable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20CloneableInterface {
    return new utils.Interface(_abi) as ERC20CloneableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Cloneable {
    return new Contract(address, _abi, signerOrProvider) as ERC20Cloneable;
  }
}
