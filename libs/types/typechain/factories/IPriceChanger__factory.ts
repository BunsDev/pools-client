/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IPriceChanger, IPriceChangerInterface } from "../IPriceChanger";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "startPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "endPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint112",
        name: "transferAmount",
        type: "uint112",
      },
    ],
    name: "PriceChange",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "oldPrice",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "newPrice",
        type: "int256",
      },
    ],
    name: "executePriceChange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "setPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "updateFeeAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPriceChanger__factory {
  static readonly abi = _abi;
  static createInterface(): IPriceChangerInterface {
    return new utils.Interface(_abi) as IPriceChangerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPriceChanger {
    return new Contract(address, _abi, signerOrProvider) as IPriceChanger;
  }
}
