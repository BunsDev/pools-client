/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestOracle, TestOracleInterface } from "../TestOracle";

const _abi = [
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
    ],
    name: "setOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610356806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637adbf973146100515780637dc0d1d01461006d57806398d5fdca1461008b578063b5bf6eb6146100a9575b600080fd5b61006b600480360381019061006691906101df565b6100b3565b005b610075610189565b6040516100829190610266565b60405180910390f35b6100936101af565b6040516100a09190610281565b60405180910390f35b6100b16101b8565b005b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610145576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013c9061029c565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054905090565b60016000808282540192505081905550565b6000813590506101d981610309565b92915050565b6000602082840312156101f157600080fd5b60006101ff848285016101ca565b91505092915050565b610211816102cd565b82525050565b610220816102df565b82525050565b6000610233601a836102bc565b91507f4f7261636c652063616e6e6f74206265203020616464726573730000000000006000830152602082019050919050565b600060208201905061027b6000830184610208565b92915050565b60006020820190506102966000830184610217565b92915050565b600060208201905081810360008301526102b581610226565b9050919050565b600082825260208201905092915050565b60006102d8826102e9565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610312816102cd565b811461031d57600080fd5b5056fea264697066735822122037e4c6eb290b66980f3a45bd68e46ba1e730f518025680ca253c25f27b51becf64736f6c63430007060033";

export class TestOracle__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestOracle> {
    return super.deploy(overrides || {}) as Promise<TestOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestOracle {
    return super.attach(address) as TestOracle;
  }
  connect(signer: Signer): TestOracle__factory {
    return super.connect(signer) as TestOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOracleInterface {
    return new utils.Interface(_abi) as TestOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestOracle {
    return new Contract(address, _abi, signerOrProvider) as TestOracle;
  }
}
