/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IPoolKeeper, IPoolKeeperInterface } from "../IPoolKeeper";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "marketCode",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oracle",
        type: "address",
      },
    ],
    name: "CreateMarket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "oldPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "newPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "updateInterval",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "pool",
        type: "string",
      },
    ],
    name: "ExecutePriceChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "oldPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "newPrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "updateInterval",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "poolCode",
        type: "string",
      },
    ],
    name: "NewRound",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "firstPrice",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "poolCode",
        type: "string",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "poolCode",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "PoolUpdateError",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "cumulativePrice",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "int256",
        name: "count",
        type: "int256",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "updateInterval",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "market",
        type: "string",
      },
    ],
    name: "PriceSample",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_poolCode",
        type: "string",
      },
      {
        internalType: "address",
        name: "_poolAddress",
        type: "address",
      },
    ],
    name: "newPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPoolKeeper__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolKeeperInterface {
    return new utils.Interface(_abi) as IPoolKeeperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPoolKeeper {
    return new Contract(address, _abi, signerOrProvider) as IPoolKeeper;
  }
}
